package io.objects.tl.api.request;

import static io.objects.tl.StreamUtils.*;
import static io.objects.tl.TLObjectUtils.*;

import io.objects.tl.TLContext;
import io.objects.tl.api.TLAbsInputStickeredMedia;
import io.objects.tl.api.TLAbsStickerSetCovered;
import io.objects.tl.core.TLMethod;
import io.objects.tl.core.TLVector;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;

/**
 * This class is generated by Mono's TL class generator
 */
public class TLRequestMessagesGetAttachedStickers extends TLMethod<TLVector<TLAbsStickerSetCovered>> {
    public static final int CONSTRUCTOR_ID = 0xcc5b67cc;

    protected TLAbsInputStickeredMedia media;

    private final String _constructor = "messages.getAttachedStickers#cc5b67cc";

    public TLRequestMessagesGetAttachedStickers() {
    }

    public TLRequestMessagesGetAttachedStickers(TLAbsInputStickeredMedia media) {
        this.media = media;
    }

    @Override
    @SuppressWarnings({"unchecked", "SimplifiableConditionalExpression"})
    public TLVector<TLAbsStickerSetCovered> deserializeResponse(InputStream stream,
            TLContext context) throws IOException {
        return readTLVector(stream, context);
    }

    @Override
    public void serializeBody(OutputStream stream) throws IOException {
        writeTLObject(media, stream);
    }

    @Override
    @SuppressWarnings({"unchecked", "SimplifiableConditionalExpression"})
    public void deserializeBody(InputStream stream, TLContext context) throws IOException {
        media = readTLObject(stream, context, TLAbsInputStickeredMedia.class, -1);
    }

    @Override
    public int computeSerializedSize() {
        int size = SIZE_CONSTRUCTOR_ID;
        size += media.computeSerializedSize();
        return size;
    }

    @Override
    public String toString() {
        return _constructor;
    }

    @Override
    public int getConstructorId() {
        return CONSTRUCTOR_ID;
    }

    public TLAbsInputStickeredMedia getMedia() {
        return media;
    }

    public void setMedia(TLAbsInputStickeredMedia media) {
        this.media = media;
    }
}
